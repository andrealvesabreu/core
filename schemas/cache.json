{
    "type": "object",
    "required": [
        "type",
        "config"
    ],
    "properties": {
        "type": {
            "type": "string",
            "const":"cache"
        },
        "config": {
            "type": "array",
            "minItems": 1,
            "items": {
                "type": "object",
                "anyOf": [
                    {
                        "if": {
                            "properties": {
                                "driver": {
                                    "const": "redis"
                                }
                            },
                            "required": [
                                "driver"
                            ]
                        },
                        "then": {
                            "$ref": "#/definitions/redis"
                        },
                        "else": {
                            "$ref": "#/definitions/memcached"
                        }
                    }
                ]
            }
        }
    },
    "definitions": {
        "memcached": {
            "type": "object",
            "required": [
                "name",
                "driver",
                "host",
                "port"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 60,
                    "pattern": "^[^\\s]*$"
                },
                "driver": {
                    "const": "memcached"
                },
                "host": {
                    "type": "string",
                    "format": "hostname"
                },
                "port": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535
                },
                "binary": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 30
                },
                "serializer": {
                    "type": "string",
                    "enum": [
                        "json",
                        "json_array",
                        "php",
                        "igbinary",
                        "msgpack"
                    ]
                },
                "ttl": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "redis": {
            "type": "object",
            "required": [
                "name",
                "driver",
                "host",
                "port"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 60,
                    "pattern": "^[^\\s]*$"
                },
                "driver": {
                    "const": "redis"
                },
                "host": {
                    "type": "string",
                    "format": "hostname"
                },
                "port": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535
                },
                "pass": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                },
                "database": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 128
                },
                "ttl": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        }
    }
}